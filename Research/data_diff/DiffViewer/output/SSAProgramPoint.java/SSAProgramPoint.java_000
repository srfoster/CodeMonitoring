//Time : 2012-04-10 02:44:18.653
//Files Open : /pvekris/src/main/java/energy/util/SSAProgramPoint.java /pvekris/src/main/java/energy/interproc/CtxSensLocking.java /pvekris/src/main/java/energy/analysis/SpecialConditions.java /pvekris/src/main/java/energy/analysis/ThreadInvestigation.java 
package energy.util;
import com.ibm.wala.classLoader.CallSiteReference;
import com.ibm.wala.classLoader.IMethod;
import com.ibm.wala.classLoader.ProgramCounter;
import com.ibm.wala.ipa.callgraph.CGNode;
import com.ibm.wala.ssa.ISSABasicBlock;
import com.ibm.wala.ssa.SSAInstruction;
import com.ibm.wala.ssa.SSAInvokeInstruction;
import com.ibm.wala.util.intset.IntSet;
public class SSAProgramPoint {
  private CGNode node;
  private IMethod method;
  private ISSABasicBlock bb;
  private IntSet indices;
  private SSAInstruction instruction;
  public SSAProgramPoint(  CGNode n,  SSAInstruction instr){
    this.node=n;
    this.method=n.getMethod();
    this.bb=n.getIR().getBasicBlockForInstruction(instr);
    if (instr instanceof SSAInvokeInstruction) {
      SSAInvokeInstruction inv=(SSAInvokeInstruction)instr;
      CallSiteReference site=inv.getCallSite();
      this.indices=n.getIR().getCallInstructionIndices(site);
    }
    this.instruction=instr;
  }
  public boolean equals(  Object o){
    if (o instanceof SSAProgramPoint) {
      SSAProgramPoint pp=(SSAProgramPoint)o;
      return (this.method.equals(pp.getMethod()) && this.bb.equals(pp.getBasicBlock()));
    }
    return false;
  }
  public int hashCode(){
    return (node.hashCode() * 7329) + (instruction.hashCode() * 9223);
  }
  public String toString(){
    StringBuffer sb=new StringBuffer();
    sb.append(method.getDeclaringClass().getName().toString());
    sb.append(".");
    sb.append(method.getName().toString());
    sb.append(" || ");
    sb.append("(BB:" + bb.getNumber() + ")");
    return sb.toString();
  }
  public IMethod getMethod(){
    return method;
  }
  public ISSABasicBlock getBasicBlock(){
    return bb;
  }
  public IntSet getIndices(){
    return indices;
  }
  public SSAInstruction getInstruction(){
    return instruction;
  }
  public CGNode getCGNode(){
    return node;
  }
  public ProgramCounter getPC(){
    return null;
  }
}
